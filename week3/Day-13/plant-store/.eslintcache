[{"/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/index.js":"1","/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/App.js":"2","/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Navbar.js":"3","/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Content.js":"4","/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Footer.js":"5","/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Day-11/Signin.js":"6","/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Day-11/Signup.js":"7","/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/index.js":"8","/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/App.js":"9","/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/components/SigninSignup/Signin.js":"10","/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/components/SigninSignup/Signup.js":"11","/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/components/SigninSignup/LoginFormValidationRules.js":"12","/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/components/SigninSignup/useForm.js":"13"},{"size":569,"mtime":1612311077448,"results":"14","hashOfConfig":"15"},{"size":783,"mtime":1612311387155,"results":"16","hashOfConfig":"15"},{"size":1655,"mtime":1612088394978,"results":"17","hashOfConfig":"15"},{"size":2124,"mtime":1612092514585,"results":"18","hashOfConfig":"15"},{"size":1714,"mtime":1612098483733,"results":"19","hashOfConfig":"15"},{"size":2108,"mtime":1612311176275,"results":"20","hashOfConfig":"15"},{"size":3878,"mtime":1612311158732,"results":"21","hashOfConfig":"15"},{"size":569,"mtime":1612333850708,"results":"22","hashOfConfig":"23"},{"size":795,"mtime":1612346441812,"results":"24","hashOfConfig":"23"},{"size":1708,"mtime":1612360477636,"results":"25","hashOfConfig":"23"},{"size":3039,"mtime":1612360492120,"results":"26","hashOfConfig":"23"},{"size":659,"mtime":1612346890132,"results":"27","hashOfConfig":"23"},{"size":767,"mtime":1612342555077,"results":"28","hashOfConfig":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1rrin1l",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"3eoj9b",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},"/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/index.js",[],["67","68"],"/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/App.js",[],"/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Navbar.js",["69","70","71","72","73","74"],"import React from \"react\";\n\nimport \"./Navbar.css\";\n\nimport img from \"../img/utama.jpg\";\n\nfunction Navbar() {\n  return (\n    <>\n      <div>\n        <nav\n          class=\"navbar is-fixed-top\"\n          role=\"navigation\"\n          aria-label=\"main navigatyle={{color: }}>tion\"\n          style={{ backgroundColor: \"#BABFBB\" }}\n        >\n          <div class=\"navbar-brand\">\n            <a class=\"navbar-item judul\" href=\"\">\n              Plant .\n            </a>\n\n            <a\n              role=\"button\"\n              class=\"navbar-burger\"\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n              data-target=\"navbarBasicExample\"\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n          </div>\n\n          <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n            <div class=\"navbar-end\">\n              <a class=\"navbar-item warna\">Home</a>\n              <a class=\"navbar-item warna\">Product</a>\n              <a class=\"navbar-item warna\">Blog</a>\n              <a class=\"navbar-item warna\">About</a>\n            </div>\n          </div>\n        </nav>\n      </div>\n      <div>\n        <div>\n          <img className=\"utama\" src={img} alt=\"utama\" />\n          <p className=\"p1\">CREATE YOUR OWN SMALL GARDEN</p>\n          <p className=\"p2\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore.\n          </p>\n          <button className=\"button\">Learn more</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Navbar;\n",["75","76"],"/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Content.js",[],"/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Footer.js",["77","78","79","80","81","82","83"],"import React from \"react\";\nimport \"./Footer.css\";\n\nfunction Footer() {\n  return (\n    <div className=\"umum\">\n      <div class=\"container\"></div>\n      <footer>\n        <section class=\"ft-main\">\n          <div class=\"ft-main-item\">\n            <h2 class=\"ft-title1\">PLANT .</h2>\n            <p className=\"news\">Newsletter</p>\n            <form>\n              <input type=\"email\" name=\"email\" placeholder=\"Enter Your Email\" />\n              <input type=\"submit\" value=\"SUBSCRIBE\" />\n            </form>\n          </div>\n          <div class=\"ft-main-item2\">\n            <h2 class=\"ft-title\">Product</h2>\n            <ul>\n              <li>\n                <a href=\"#\">Indoor</a>\n              </li>\n              <li>\n                <a href=\"#\">Outdoor</a>\n              </li>\n            </ul>\n          </div>\n          <div class=\"ft-main-item2\">\n            <h2 class=\"ft-title\">About</h2>\n            <ul>\n              <li>\n                <a href=\"#\">About Us</a>\n              </li>\n              <li>\n                <a href=\"#\">Contact</a>\n              </li>\n            </ul>\n          </div>\n          <div class=\"ft-main-item2\">\n            <h2 class=\"ft-title\">Sosial Media</h2>\n            <ul>\n              <li>\n                <a href=\"#\">Facebook</a>\n              </li>\n              <li>\n                <a href=\"#\">Instagram</a>\n              </li>\n              <li>\n                <a href=\"#\">Twitter</a>\n              </li>\n            </ul>\n          </div>\n        </section>\n\n        <section className=\"term\">\n          <p>Copyright 2021 by Abdul Halim</p>\n          <p>Term of Service | Privacy Policy</p>\n        </section>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Day-11/Signin.js",["84"],"import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nimport * as Yup from \"yup\";\n\nconst Signin = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      email: Yup.string(\"Enter your email\")\n        .email(\"Enter a valid email\")\n        .required(\"Email is required\"),\n      password: Yup.string(\"Enter your password\")\n        .min(8, \"Password should be of minimum 8 characters length\")\n        .required(\"Password is required\"),\n    }),\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <h3>Sign In</h3>\n\n      <div className=\"form-group\">\n        <label>Email address</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          className=\"form-control\"\n          placeholder=\"Enter email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div className=\"color\">{formik.errors.email}</div>\n        ) : null}\n      </div>\n\n      <div className=\"form-group\">\n        <label>Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          className=\"form-control\"\n          placeholder=\"Enter password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div className=\"color\">{formik.errors.password}</div>\n        ) : null}\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-block\"\n        style={{ backgroundColor: \"#949e93\", color: \"white\" }}\n      >\n        Submit\n      </button>\n      <p className=\"signin-signup text-right\">\n        Don't have an account?\n        <Link to={\"/sign-up\"}>\n          <a href=\"#\"> Sign Up</a>\n        </Link>\n      </p>\n    </form>\n  );\n};\n\nexport default Signin;\n","/home/ahalim/Xapiens/xapiensBootcamp/week2/Day-10/plant-store/src/components/Day-11/Signup.js",["85"],"import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nimport * as Yup from \"yup\";\n\nconst Signup = () => {\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phoneNumber: \"\",\n      address: \"\",\n    },\n    validationSchema: Yup.object({\n      name: Yup.string(\"Enter your name\").required(\"Name is required\"),\n      email: Yup.string(\"Enter your email\")\n        .email(\"Enter a valid email\")\n        .required(\"Email is required\"),\n      password: Yup.string(\"Enter your password\")\n        .min(8, \"Password should be of minimum 8 characters length\")\n        .required(\"Password is required\"),\n      phoneNumber: Yup.string(\"Enter your phone number\").required(\n        \"Phone Number is required\"\n      ),\n      address: Yup.string(\"Enter your address\").required(\"Address is required\"),\n    }),\n    onSubmit: (values) => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <h3>Sign Up</h3>\n\n      <div className=\"form-group\">\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          placeholder=\"Your Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n      </div>\n      {formik.touched.name && formik.errors.name ? (\n        <div className=\"color\">{formik.errors.name}</div>\n      ) : null}\n\n      <div className=\"form-group\">\n        <label>Email</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          className=\"form-control\"\n          placeholder=\"Your Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.email && formik.errors.email ? (\n          <div className=\"color\">{formik.errors.email}</div>\n        ) : null}\n      </div>\n\n      <div className=\"form-group\">\n        <label>Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          className=\"form-control\"\n          placeholder=\"Your Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.password && formik.errors.password ? (\n          <div className=\"color\">{formik.errors.password}</div>\n        ) : null}\n      </div>\n\n      <div className=\"form-group\">\n        <label>Phone Number</label>\n        <input\n          type=\"number\"\n          name=\"phoneNumber\"\n          className=\"form-control\"\n          placeholder=\"Your Phone Number\"\n          value={formik.values.phoneNumber}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.phoneNumber && formik.errors.phoneNumber ? (\n          <div className=\"color\">{formik.errors.phoneNumber}</div>\n        ) : null}\n      </div>\n\n      <div className=\"form-group\">\n        <label>Address</label>\n        <input\n          type=\"text\"\n          name=\"address\"\n          className=\"form-control\"\n          placeholder=\"Your Address\"\n          value={formik.values.address}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        {formik.touched.address && formik.errors.address ? (\n          <div className=\"color\">{formik.errors.address}</div>\n        ) : null}\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-block\"\n        style={{ backgroundColor: \"#949e93\", color: \"white\" }}\n      >\n        Sign Up\n      </button>\n      <p className=\"signin-signup text-right\">\n        Already registered\n        <Link to={\"/sign-in\"}>\n          <a href=\"#\"> sign in?</a>\n        </Link>\n      </p>\n    </form>\n  );\n};\n\nexport default Signup;\n",["86","87"],"/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/index.js",[],["88","89"],"/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/App.js",[],"/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/components/SigninSignup/Signin.js",["90"],"import React from \"react\";\nimport useForm from \"./useForm\";\nimport validate from \"./LoginFormValidationRules\";\nimport { Link } from \"react-router-dom\";\n\nconst Signin = () => {\n  const { values, errors, handleChange, handleSubmit } = useForm(\n    login,\n    validate\n  );\n\n  function login() {\n    console.log(\"No errors, submit callback called!\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit} novalidate>\n      <h3>Sign In</h3>\n\n      <div className=\"form-group\">\n        <label>Email address</label>\n        <input\n          autoComplete=\"off\"\n          type=\"email\"\n          name=\"email\"\n          className={`form-control ${errors.email && \"is-invalid\"}`}\n          placeholder=\"Enter email\"\n          value={values.email || \"\"}\n          onChange={handleChange}\n        />\n        <div>{errors.email && <p className=\"color\">{errors.email}</p>}</div>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          className={`form-control ${errors.password && \"is-invalid\"}`}\n          placeholder=\"Enter password\"\n          value={values.password || \"\"}\n          onChange={handleChange}\n        />\n        <div>\n          {errors.password && <p className=\"color\">{errors.password}</p>}\n        </div>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-block\"\n        style={{ backgroundColor: \"#949e93\", color: \"white\" }}\n      >\n        Submit\n      </button>\n      <p className=\"signin-signup text-right\">\n        Don't have an account?\n        <Link to={\"/sign-up\"}>\n          <a href=\"#\"> Sign Up</a>\n        </Link>\n      </p>\n    </form>\n  );\n};\n\nexport default Signin;\n","/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/components/SigninSignup/Signup.js",["91"],"import React from \"react\";\nimport useForm from \"./useForm\";\nimport validate from \"./LoginFormValidationRules\";\nimport { Link } from \"react-router-dom\";\n\nconst Signup = () => {\n  const { values, errors, handleChange, handleSubmit } = useForm(\n    login,\n    validate\n  );\n\n  function login() {\n    console.log(\"No errors, submit callback called!\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Sign Up</h3>\n\n      <div className=\"form-group\">\n        <label>Name</label>\n        <input\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          className={`form-control ${errors.name && \"is-invalid\"}`}\n          placeholder=\"Your Name\"\n          value={values.name || \"\"}\n          onChange={handleChange}\n        />\n      </div>\n      <div>{errors.name && <p className=\"color\">{errors.name}</p>}</div>\n\n      <div className=\"form-group\">\n        <label>Email</label>\n        <input\n          autoComplete=\"off\"\n          type=\"email\"\n          name=\"email\"\n          className={`form-control ${errors.email && \"is-invalid\"}`}\n          placeholder=\"Your Email\"\n          value={values.email || \"\"}\n          onChange={handleChange}\n        />\n        <div>{errors.email && <p className=\"color\">{errors.email}</p>}</div>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          className={`form-control ${errors.password && \"is-invalid\"}`}\n          placeholder=\"Your Password\"\n          value={values.password || \"\"}\n          onChange={handleChange}\n        />\n        <div>\n          {errors.password && <p className=\"color\">{errors.password}</p>}\n        </div>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Phone Number</label>\n        <input\n          type=\"number\"\n          min=\"0\"\n          name=\"phoneNumber\"\n          className={`form-control ${\n            errors.phoneNumber && \"is-invalid\"\n          } no-arrow`}\n          placeholder=\"Your Phone Number\"\n          value={values.phoneNumber || \"\"}\n          onChange={handleChange}\n        />\n        <div>\n          {errors.phoneNumber && <p className=\"color\">{errors.phoneNumber}</p>}\n        </div>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Address</label>\n        <input\n          type=\"text\"\n          name=\"address\"\n          className={`form-control ${errors.address && \"is-invalid\"}`}\n          placeholder=\"Your Address\"\n          value={values.address || \"\"}\n          onChange={handleChange}\n        />\n        <div>{errors.address && <p className=\"color\">{errors.address}</p>}</div>\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"btn btn-block\"\n        style={{ backgroundColor: \"#949e93\", color: \"white\" }}\n      >\n        Sign Up\n      </button>\n      <p className=\"signin-signup text-right\">\n        Already registered\n        <Link to={\"/sign-in\"}>\n          <a href=\"#\"> sign in?</a>\n        </Link>\n      </p>\n    </form>\n  );\n};\n\nexport default Signup;\n","/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/components/SigninSignup/LoginFormValidationRules.js",[],["92","93"],"/home/ahalim/Xapiens/xapiensBootcamp/week3/Day-13/plant-store/src/components/SigninSignup/useForm.js",["94"],"import { useState, useEffect } from \"react\";\n\nconst useForm = (callback, validate) => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues((values) => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n  };\n};\n\nexport default useForm;\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":18,"column":13,"nodeType":"101","endLine":18,"endColumn":50},{"ruleId":"99","severity":1,"message":"102","line":22,"column":13,"nodeType":"101","endLine":28,"endColumn":14},{"ruleId":"99","severity":1,"message":"102","line":37,"column":15,"nodeType":"101","endLine":37,"endColumn":44},{"ruleId":"99","severity":1,"message":"102","line":38,"column":15,"nodeType":"101","endLine":38,"endColumn":44},{"ruleId":"99","severity":1,"message":"102","line":39,"column":15,"nodeType":"101","endLine":39,"endColumn":44},{"ruleId":"99","severity":1,"message":"102","line":40,"column":15,"nodeType":"101","endLine":40,"endColumn":44},{"ruleId":"95","replacedBy":"103"},{"ruleId":"97","replacedBy":"104"},{"ruleId":"99","severity":1,"message":"100","line":22,"column":17,"nodeType":"101","endLine":22,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":25,"column":17,"nodeType":"101","endLine":25,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":33,"column":17,"nodeType":"101","endLine":33,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":36,"column":17,"nodeType":"101","endLine":36,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":44,"column":17,"nodeType":"101","endLine":44,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":47,"column":17,"nodeType":"101","endLine":47,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":50,"column":17,"nodeType":"101","endLine":50,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":72,"column":11,"nodeType":"101","endLine":72,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":128,"column":11,"nodeType":"101","endLine":128,"endColumn":23},{"ruleId":"95","replacedBy":"105"},{"ruleId":"97","replacedBy":"106"},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","replacedBy":"108"},{"ruleId":"99","severity":1,"message":"100","line":59,"column":11,"nodeType":"101","endLine":59,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":104,"column":11,"nodeType":"101","endLine":104,"endColumn":23},{"ruleId":"95","replacedBy":"109"},{"ruleId":"97","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":12,"column":6,"nodeType":"113","endLine":12,"endColumn":14,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["115"],["116"],["115"],["116"],["115"],["116"],["115"],["116"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"120","text":"121"},[345,353],"[callback, errors, isSubmitting]"]